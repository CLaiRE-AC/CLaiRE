{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"claire Command Line AI Request Experience Usage Commands Usage $ npm install -g @claire-ac/cli $ claire COMMAND running command... $ claire (--version) @claire-ac/cli/0.0.6 darwin-arm64 node-v22.14.0 $ claire --help [COMMAND] USAGE $ claire COMMAND ... Commands claire api:invitation:create [EMAIL] claire api:invitation:list claire api:project:create claire api:project:set claire api:project:show [PROJECTID] claire api:question:show [QUESTIONID] claire ask claire config claire help [COMMAND] claire info claire init claire plugins claire plugins:add PLUGIN claire plugins:inspect PLUGIN... claire plugins:install PLUGIN claire plugins:link PATH claire plugins:remove [PLUGIN] claire plugins:reset claire plugins:uninstall [PLUGIN] claire plugins:unlink [PLUGIN] claire plugins:update claire api:invitation:create [EMAIL] Send CLaiRE invitation to a new user. USAGE $ claire api:invitation:create [EMAIL] ARGUMENTS EMAIL Email of the user to invite to CLaiRE DESCRIPTION Send CLaiRE invitation to a new user. See code: src/commands/api/invitation/create.ts claire api:invitation:list Show sent CLaiRE invitations. USAGE $ claire api:invitation:list DESCRIPTION Show sent CLaiRE invitations. See code: src/commands/api/invitation/list.ts claire api:project:create Create new project in CLaiRE API USAGE $ claire api:project:create [--name <value>] [--description <value>] FLAGS --description=<value> Project description --name=<value> Project name DESCRIPTION Create new project in CLaiRE API See code: src/commands/api/project/create.ts claire api:project:set List users projects and set active project in CLaiRE config. USAGE $ claire api:project:set DESCRIPTION List users projects and set active project in CLaiRE config. See code: src/commands/api/project/set.ts claire api:project:show [PROJECTID] Show information for CLaiRE project USAGE $ claire api:project:show [PROJECTID] [--list] [-p <value>] ARGUMENTS PROJECTID ID of project to display FLAGS -p, --projectId=<value> ID of project to display --list List projects and select to view DESCRIPTION Show information for CLaiRE project See code: src/commands/api/project/show.ts claire api:question:show [QUESTIONID] Show details for CLaiRE question USAGE $ claire api:question:show [QUESTIONID] [--list] [-q <value>] [-s] ARGUMENTS QUESTIONID ID of question to display FLAGS -q, --questionId=<value> ID of question to display -s, --skipResponse Do not include question response in output --list List questions and select to view DESCRIPTION Show details for CLaiRE question See code: src/commands/api/question/show.ts claire ask Send a prompt to CLaiRE API and retrieve a response. USAGE $ claire ask [-p <value>] [-F <value>...] [-c <value>...] FLAGS -F, --inputFile=<value>... Path to file(s) containing the question input -c, --contextIds=<value>... Comma-separated list of context IDs -p, --prompt=<value> Prompt to send DESCRIPTION Send a prompt to CLaiRE API and retrieve a response. EXAMPLES $ claire ask -p \"How do I add ActiveAdmin to a Rails 7 app?\" $ claire ask -p \"Refactor this file\" -F path/to/src/file.ts $ claire ask -F path/to/input.txt $ claire ask -p \"Help me combine these files:\" -F path/to/file1.ts -F path/to/file2.ts $ claire ask -p \"Analyze this code\" -c 123 -c 456 See code: src/commands/ask.ts claire config View current or set new CLaiRE configuration values. USAGE $ claire config [-h <value>] [-t <value>] FLAGS -h, --host=<value> Set API base URL -t, --token=<value> Set CLaiRE API key DESCRIPTION View current or set new CLaiRE configuration values. See code: src/commands/config.ts claire help [COMMAND] Display help for claire. USAGE $ claire help [COMMAND...] [-n] ARGUMENTS COMMAND... Command to show help for. FLAGS -n, --nested-commands Include all nested commands in the output. DESCRIPTION Display help for claire. See code: @oclif/plugin-help claire info Display current project and configuration information. USAGE $ claire info DESCRIPTION Display current project and configuration information. See code: src/commands/info.ts claire init Initialize CLaiRE CLI. USAGE $ claire init DESCRIPTION Initialize CLaiRE CLI. See code: src/commands/init.ts claire plugins List installed plugins. USAGE $ claire plugins [--json] [--core] FLAGS --core Show core plugins. GLOBAL FLAGS --json Format output as json. DESCRIPTION List installed plugins. EXAMPLES $ claire plugins See code: @oclif/plugin-plugins claire plugins:add PLUGIN Installs a plugin into claire. USAGE $ claire plugins:add PLUGIN... [--json] [-f] [-h] [-s | -v] ARGUMENTS PLUGIN... Plugin to install. FLAGS -f, --force Force npm to fetch remote resources even if a local copy exists on disk. -h, --help Show CLI help. -s, --silent Silences npm output. -v, --verbose Show verbose npm output. GLOBAL FLAGS --json Format output as json. DESCRIPTION Installs a plugin into claire. Uses npm to install plugins. Installation of a user-installed plugin will override a core plugin. Use the CLAIRE_NPM_LOG_LEVEL environment variable to set the npm loglevel. Use the CLAIRE_NPM_REGISTRY environment variable to set the npm registry. ALIASES $ claire plugins:add EXAMPLES Install a plugin from npm registry. $ claire plugins:add myplugin Install a plugin from a github url. $ claire plugins:add https://github.com/someuser/someplugin Install a plugin from a github slug. $ claire plugins:add someuser/someplugin claire plugins:inspect PLUGIN... Displays installation properties of a plugin. USAGE $ claire plugins:inspect PLUGIN... ARGUMENTS PLUGIN... [default: .] Plugin to inspect. FLAGS -h, --help Show CLI help. -v, --verbose GLOBAL FLAGS --json Format output as json. DESCRIPTION Displays installation properties of a plugin. EXAMPLES $ claire plugins:inspect myplugin See code: @oclif/plugin-plugins claire plugins:install PLUGIN Installs a plugin into claire. USAGE $ claire plugins:install PLUGIN... [--json] [-f] [-h] [-s | -v] ARGUMENTS PLUGIN... Plugin to install. FLAGS -f, --force Force npm to fetch remote resources even if a local copy exists on disk. -h, --help Show CLI help. -s, --silent Silences npm output. -v, --verbose Show verbose npm output. GLOBAL FLAGS --json Format output as json. DESCRIPTION Installs a plugin into claire. Uses npm to install plugins. Installation of a user-installed plugin will override a core plugin. Use the CLAIRE_NPM_LOG_LEVEL environment variable to set the npm loglevel. Use the CLAIRE_NPM_REGISTRY environment variable to set the npm registry. ALIASES $ claire plugins:add EXAMPLES Install a plugin from npm registry. $ claire plugins:install myplugin Install a plugin from a github url. $ claire plugins:install https://github.com/someuser/someplugin Install a plugin from a github slug. $ claire plugins:install someuser/someplugin See code: @oclif/plugin-plugins claire plugins:link PATH Links a plugin into the CLI for development. USAGE $ claire plugins:link PATH [-h] [--install] [-v] ARGUMENTS PATH [default: .] path to plugin FLAGS -h, --help Show CLI help. -v, --verbose --[no-]install Install dependencies after linking the plugin. DESCRIPTION Links a plugin into the CLI for development. Installation of a linked plugin will override a user-installed or core plugin. e.g. If you have a user-installed or core plugin that has a 'hello' command, installing a linked plugin with a 'hello' command will override the user-installed or core plugin implementation. This is useful for development work. EXAMPLES $ claire plugins:link myplugin See code: @oclif/plugin-plugins claire plugins:remove [PLUGIN] Removes a plugin from the CLI. USAGE $ claire plugins:remove [PLUGIN...] [-h] [-v] ARGUMENTS PLUGIN... plugin to uninstall FLAGS -h, --help Show CLI help. -v, --verbose DESCRIPTION Removes a plugin from the CLI. ALIASES $ claire plugins:unlink $ claire plugins:remove EXAMPLES $ claire plugins:remove myplugin claire plugins:reset Remove all user-installed and linked plugins. USAGE $ claire plugins:reset [--hard] [--reinstall] FLAGS --hard Delete node_modules and package manager related files in addition to uninstalling plugins. --reinstall Reinstall all plugins after uninstalling. See code: @oclif/plugin-plugins claire plugins:uninstall [PLUGIN] Removes a plugin from the CLI. USAGE $ claire plugins:uninstall [PLUGIN...] [-h] [-v] ARGUMENTS PLUGIN... plugin to uninstall FLAGS -h, --help Show CLI help. -v, --verbose DESCRIPTION Removes a plugin from the CLI. ALIASES $ claire plugins:unlink $ claire plugins:remove EXAMPLES $ claire plugins:uninstall myplugin See code: @oclif/plugin-plugins claire plugins:unlink [PLUGIN] Removes a plugin from the CLI. USAGE $ claire plugins:unlink [PLUGIN...] [-h] [-v] ARGUMENTS PLUGIN... plugin to uninstall FLAGS -h, --help Show CLI help. -v, --verbose DESCRIPTION Removes a plugin from the CLI. ALIASES $ claire plugins:unlink $ claire plugins:remove EXAMPLES $ claire plugins:unlink myplugin claire plugins:update Update installed plugins. USAGE $ claire plugins:update [-h] [-v] FLAGS -h, --help Show CLI help. -v, --verbose DESCRIPTION Update installed plugins. See code: @oclif/plugin-plugins","title":"Home"},{"location":"#claire","text":"Command Line AI Request Experience Usage Commands","title":"claire"},{"location":"#usage","text":"$ npm install -g @claire-ac/cli $ claire COMMAND running command... $ claire (--version) @claire-ac/cli/0.0.6 darwin-arm64 node-v22.14.0 $ claire --help [COMMAND] USAGE $ claire COMMAND ...","title":"Usage"},{"location":"#commands","text":"claire api:invitation:create [EMAIL] claire api:invitation:list claire api:project:create claire api:project:set claire api:project:show [PROJECTID] claire api:question:show [QUESTIONID] claire ask claire config claire help [COMMAND] claire info claire init claire plugins claire plugins:add PLUGIN claire plugins:inspect PLUGIN... claire plugins:install PLUGIN claire plugins:link PATH claire plugins:remove [PLUGIN] claire plugins:reset claire plugins:uninstall [PLUGIN] claire plugins:unlink [PLUGIN] claire plugins:update","title":"Commands"},{"location":"#claire-apiinvitationcreate-email","text":"Send CLaiRE invitation to a new user. USAGE $ claire api:invitation:create [EMAIL] ARGUMENTS EMAIL Email of the user to invite to CLaiRE DESCRIPTION Send CLaiRE invitation to a new user. See code: src/commands/api/invitation/create.ts","title":"claire api:invitation:create [EMAIL]"},{"location":"#claire-apiinvitationlist","text":"Show sent CLaiRE invitations. USAGE $ claire api:invitation:list DESCRIPTION Show sent CLaiRE invitations. See code: src/commands/api/invitation/list.ts","title":"claire api:invitation:list"},{"location":"#claire-apiprojectcreate","text":"Create new project in CLaiRE API USAGE $ claire api:project:create [--name <value>] [--description <value>] FLAGS --description=<value> Project description --name=<value> Project name DESCRIPTION Create new project in CLaiRE API See code: src/commands/api/project/create.ts","title":"claire api:project:create"},{"location":"#claire-apiprojectset","text":"List users projects and set active project in CLaiRE config. USAGE $ claire api:project:set DESCRIPTION List users projects and set active project in CLaiRE config. See code: src/commands/api/project/set.ts","title":"claire api:project:set"},{"location":"#claire-apiprojectshow-projectid","text":"Show information for CLaiRE project USAGE $ claire api:project:show [PROJECTID] [--list] [-p <value>] ARGUMENTS PROJECTID ID of project to display FLAGS -p, --projectId=<value> ID of project to display --list List projects and select to view DESCRIPTION Show information for CLaiRE project See code: src/commands/api/project/show.ts","title":"claire api:project:show [PROJECTID]"},{"location":"#claire-apiquestionshow-questionid","text":"Show details for CLaiRE question USAGE $ claire api:question:show [QUESTIONID] [--list] [-q <value>] [-s] ARGUMENTS QUESTIONID ID of question to display FLAGS -q, --questionId=<value> ID of question to display -s, --skipResponse Do not include question response in output --list List questions and select to view DESCRIPTION Show details for CLaiRE question See code: src/commands/api/question/show.ts","title":"claire api:question:show [QUESTIONID]"},{"location":"#claire-ask","text":"Send a prompt to CLaiRE API and retrieve a response. USAGE $ claire ask [-p <value>] [-F <value>...] [-c <value>...] FLAGS -F, --inputFile=<value>... Path to file(s) containing the question input -c, --contextIds=<value>... Comma-separated list of context IDs -p, --prompt=<value> Prompt to send DESCRIPTION Send a prompt to CLaiRE API and retrieve a response. EXAMPLES $ claire ask -p \"How do I add ActiveAdmin to a Rails 7 app?\" $ claire ask -p \"Refactor this file\" -F path/to/src/file.ts $ claire ask -F path/to/input.txt $ claire ask -p \"Help me combine these files:\" -F path/to/file1.ts -F path/to/file2.ts $ claire ask -p \"Analyze this code\" -c 123 -c 456 See code: src/commands/ask.ts","title":"claire ask"},{"location":"#claire-config","text":"View current or set new CLaiRE configuration values. USAGE $ claire config [-h <value>] [-t <value>] FLAGS -h, --host=<value> Set API base URL -t, --token=<value> Set CLaiRE API key DESCRIPTION View current or set new CLaiRE configuration values. See code: src/commands/config.ts","title":"claire config"},{"location":"#claire-help-command","text":"Display help for claire. USAGE $ claire help [COMMAND...] [-n] ARGUMENTS COMMAND... Command to show help for. FLAGS -n, --nested-commands Include all nested commands in the output. DESCRIPTION Display help for claire. See code: @oclif/plugin-help","title":"claire help [COMMAND]"},{"location":"#claire-info","text":"Display current project and configuration information. USAGE $ claire info DESCRIPTION Display current project and configuration information. See code: src/commands/info.ts","title":"claire info"},{"location":"#claire-init","text":"Initialize CLaiRE CLI. USAGE $ claire init DESCRIPTION Initialize CLaiRE CLI. See code: src/commands/init.ts","title":"claire init"},{"location":"#claire-plugins","text":"List installed plugins. USAGE $ claire plugins [--json] [--core] FLAGS --core Show core plugins. GLOBAL FLAGS --json Format output as json. DESCRIPTION List installed plugins. EXAMPLES $ claire plugins See code: @oclif/plugin-plugins","title":"claire plugins"},{"location":"#claire-pluginsadd-plugin","text":"Installs a plugin into claire. USAGE $ claire plugins:add PLUGIN... [--json] [-f] [-h] [-s | -v] ARGUMENTS PLUGIN... Plugin to install. FLAGS -f, --force Force npm to fetch remote resources even if a local copy exists on disk. -h, --help Show CLI help. -s, --silent Silences npm output. -v, --verbose Show verbose npm output. GLOBAL FLAGS --json Format output as json. DESCRIPTION Installs a plugin into claire. Uses npm to install plugins. Installation of a user-installed plugin will override a core plugin. Use the CLAIRE_NPM_LOG_LEVEL environment variable to set the npm loglevel. Use the CLAIRE_NPM_REGISTRY environment variable to set the npm registry. ALIASES $ claire plugins:add EXAMPLES Install a plugin from npm registry. $ claire plugins:add myplugin Install a plugin from a github url. $ claire plugins:add https://github.com/someuser/someplugin Install a plugin from a github slug. $ claire plugins:add someuser/someplugin","title":"claire plugins:add PLUGIN"},{"location":"#claire-pluginsinspect-plugin","text":"Displays installation properties of a plugin. USAGE $ claire plugins:inspect PLUGIN... ARGUMENTS PLUGIN... [default: .] Plugin to inspect. FLAGS -h, --help Show CLI help. -v, --verbose GLOBAL FLAGS --json Format output as json. DESCRIPTION Displays installation properties of a plugin. EXAMPLES $ claire plugins:inspect myplugin See code: @oclif/plugin-plugins","title":"claire plugins:inspect PLUGIN..."},{"location":"#claire-pluginsinstall-plugin","text":"Installs a plugin into claire. USAGE $ claire plugins:install PLUGIN... [--json] [-f] [-h] [-s | -v] ARGUMENTS PLUGIN... Plugin to install. FLAGS -f, --force Force npm to fetch remote resources even if a local copy exists on disk. -h, --help Show CLI help. -s, --silent Silences npm output. -v, --verbose Show verbose npm output. GLOBAL FLAGS --json Format output as json. DESCRIPTION Installs a plugin into claire. Uses npm to install plugins. Installation of a user-installed plugin will override a core plugin. Use the CLAIRE_NPM_LOG_LEVEL environment variable to set the npm loglevel. Use the CLAIRE_NPM_REGISTRY environment variable to set the npm registry. ALIASES $ claire plugins:add EXAMPLES Install a plugin from npm registry. $ claire plugins:install myplugin Install a plugin from a github url. $ claire plugins:install https://github.com/someuser/someplugin Install a plugin from a github slug. $ claire plugins:install someuser/someplugin See code: @oclif/plugin-plugins","title":"claire plugins:install PLUGIN"},{"location":"#claire-pluginslink-path","text":"Links a plugin into the CLI for development. USAGE $ claire plugins:link PATH [-h] [--install] [-v] ARGUMENTS PATH [default: .] path to plugin FLAGS -h, --help Show CLI help. -v, --verbose --[no-]install Install dependencies after linking the plugin. DESCRIPTION Links a plugin into the CLI for development. Installation of a linked plugin will override a user-installed or core plugin. e.g. If you have a user-installed or core plugin that has a 'hello' command, installing a linked plugin with a 'hello' command will override the user-installed or core plugin implementation. This is useful for development work. EXAMPLES $ claire plugins:link myplugin See code: @oclif/plugin-plugins","title":"claire plugins:link PATH"},{"location":"#claire-pluginsremove-plugin","text":"Removes a plugin from the CLI. USAGE $ claire plugins:remove [PLUGIN...] [-h] [-v] ARGUMENTS PLUGIN... plugin to uninstall FLAGS -h, --help Show CLI help. -v, --verbose DESCRIPTION Removes a plugin from the CLI. ALIASES $ claire plugins:unlink $ claire plugins:remove EXAMPLES $ claire plugins:remove myplugin","title":"claire plugins:remove [PLUGIN]"},{"location":"#claire-pluginsreset","text":"Remove all user-installed and linked plugins. USAGE $ claire plugins:reset [--hard] [--reinstall] FLAGS --hard Delete node_modules and package manager related files in addition to uninstalling plugins. --reinstall Reinstall all plugins after uninstalling. See code: @oclif/plugin-plugins","title":"claire plugins:reset"},{"location":"#claire-pluginsuninstall-plugin","text":"Removes a plugin from the CLI. USAGE $ claire plugins:uninstall [PLUGIN...] [-h] [-v] ARGUMENTS PLUGIN... plugin to uninstall FLAGS -h, --help Show CLI help. -v, --verbose DESCRIPTION Removes a plugin from the CLI. ALIASES $ claire plugins:unlink $ claire plugins:remove EXAMPLES $ claire plugins:uninstall myplugin See code: @oclif/plugin-plugins","title":"claire plugins:uninstall [PLUGIN]"},{"location":"#claire-pluginsunlink-plugin","text":"Removes a plugin from the CLI. USAGE $ claire plugins:unlink [PLUGIN...] [-h] [-v] ARGUMENTS PLUGIN... plugin to uninstall FLAGS -h, --help Show CLI help. -v, --verbose DESCRIPTION Removes a plugin from the CLI. ALIASES $ claire plugins:unlink $ claire plugins:remove EXAMPLES $ claire plugins:unlink myplugin","title":"claire plugins:unlink [PLUGIN]"},{"location":"#claire-pluginsupdate","text":"Update installed plugins. USAGE $ claire plugins:update [-h] [-v] FLAGS -h, --help Show CLI help. -v, --verbose DESCRIPTION Update installed plugins. See code: @oclif/plugin-plugins","title":"claire plugins:update"}]}